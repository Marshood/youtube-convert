{"version":3,"sources":["img/file.svg","img/instagram.svg","img/youtube.svg","img/facebook.svg","img/home.svg","img/contact.svg","components/nav/Nav.js","view/pages/youtube/youtube.js","view/pages/instgram/instgram.js","view/pages/home/home.js","view/pages/facebook/facebook.js","App.js","reportWebVitals.js","index.js"],"names":["props","location","useLocation","pathname","className","href","rel","src","logo","alt","to","HomeLogo","YoutubeLogo","InstgramLogo","FacebookLogo","ContactLogo","YoutubeConvertPage","useState","LoaderT","setLoader","urlInput","setUrlInput","urlOutpot","setUrlOutpot","pointerEvents","setpointerEvents","selectedOption","seTselectedOption","btnDownload","setBtnDownload","show","setShow","showTitle","setShowTitle","fileName","setFileName","VideoID","setVideoID","ShowVideo","setShowVideo","ClearFields","console","log","type","color","secondaryColor","height","width","visible","class","onClick","onSubmit","e","preventDefault","YTURL","target","urlyoutube","value","url","fetch","method","headers","body","JSON","stringify","then","response","json","data","title","UrlConvert","id","sendLinkProcessing","name","onChange","frameborder","allowfullscreen","download","size","style","a","status","blob","Date","window","webkitURL","createObjectURL","document","createElement","InstgramConvertPage","Home","FBV","setFBV","DL","VDATA","App","createBrowserHistory","Nav","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8f14fb9d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/file.fdded7b9.svg\";","export default __webpack_public_path__ + \"static/media/instagram.02967a62.svg\";","export default __webpack_public_path__ + \"static/media/youtube.e20f869b.svg\";","export default __webpack_public_path__ + \"static/media/facebook.3f7115f9.svg\";","export default __webpack_public_path__ + \"static/media/home.6a7fd373.svg\";","export default __webpack_public_path__ + \"static/media/contact.f3cd2ad2.svg\";","import React from 'react';\r\nimport './nav.css';\r\nimport logo from \"../../img/file.svg\" //ConvertIcon.png\"\r\nimport InstgramLogo from \"../../img/instagram.svg\" //instgram.png\"\r\nimport YoutubeLogo from \"../../img/youtube.svg\"\r\nimport FacebookLogo from \"../../img/facebook.svg\"\r\nimport HomeLogo from \"../../img/home.svg\"\r\nimport ContactLogo from '../../img/contact.svg'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n    useLocation\r\n\r\n} from \"react-router-dom\";\r\n\r\n//icons\r\n\r\nexport default props => {\r\n\r\n    let location = useLocation().pathname;\r\n\r\n\r\n    return (\r\n        <nav className=\"sidebar\">\r\n            <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\"></link>\r\n            <link href=\"https://fonts.googleapis.com/css2?family=Anton&display=swap\" rel=\"stylesheet\"></link>\r\n            <div className=\"sidebar__header-wrapper2 \">\r\n                <img className=\"Yconvert__logo  \" src={logo} alt=\"this is a logo\" />\r\n                 VConverter\r\n               </div>\r\n\r\n            <div className=\"menu__wrapper-2\">\r\n\r\n                <div className={location === \"/home\" ? 'menu__item--selected' : \"menu__item\"}>\r\n                    <Link className={location === \"/home\" ? 'menu__link menu__link--selected ' : \"menu__link\"}  to=\"/home\"><img className=\"register__logo\" src={HomeLogo} alt=\"this is a logo\" />Home</Link>\r\n                </div>\r\n                <div className={location === \"/YoutubeConvertPage\" ? 'menu__item--selected' : \"menu__item\"}>\r\n                    <Link className={location === \"/YoutubeConvertPage\" ? 'menu__link menu__link--selected' : \"menu__link\"} to=\"/YoutubeConvertPage\"><img className=\"register__logo\" src={YoutubeLogo} alt=\"this is a logo\" />Youtube</Link>\r\n                </div>\r\n                <div  className= {location === \"/InstgramConvertPage\" ? 'menu__item--selected' : \"menu__item\"}>\r\n                    <Link className={location === \"/InstgramConvertPage\" ? 'menu__link menu__link--selected' : \"menu__link\"} to=\"/InstgramConvertPage\"><img className=\"register__logo\" src={InstgramLogo} alt=\"this is a logo\" />Instgram</Link>\r\n                </div>\r\n                <div className={location === \"/FacebookConvertPage\" ? 'menu__item--selected' : \"menu__item\"}>\r\n                    <Link className={location === \"/FacebookConvertPage\" ? 'menu__link menu__link--selected' : \"menu__link\"} to=\"/FacebookConvertPage\"><img className=\"register__logo\" src={FacebookLogo} alt=\"this is a logo\" />Facebook</Link>\r\n                </div>\r\n                <div className={location === \"/ContactUsPage\" ? 'menu__item--selected' : \"menu__item\"}>\r\n                    <Link className={location === \"/ContactUsPage\" ? 'menu__link menu__link--selected' : \"menu__link\"} to=\"/FacebookConvertPage\"><img className=\"register__logo\" src={ContactLogo} alt=\"this is a logo\" />Contack Us</Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__footer\">\r\n                Converter App\r\n        </div>\r\n        </nav>\r\n    )\r\n\r\n}","import { React, useState } from 'react';\r\nimport download from 'downloadjs';\r\nimport Loader from 'react-loader-spinner';\r\nimport './youtube.css'\r\nimport { FcNext } from \"react-icons/fc\";\r\nimport { SocialIcon } from 'react-social-icons';\r\n\r\n export default function YoutubeConvertPage() {\r\n    const [LoaderT, setLoader] = useState(false); // to show the loader icon\r\n    const [urlInput, setUrlInput] = useState(''); // to save the url input\r\n    const [urlOutpot, setUrlOutpot] = useState(''); // save blobr\r\n    const [pointerEvents, setpointerEvents] = useState(false)// to stop pointer events while video processing\r\n    const [selectedOption, seTselectedOption] = useState('mp4');//save file format \r\n    const [btnDownload, setBtnDownload] = useState(false); // to show download button \r\n    const [show, setShow] = useState(false); //to show alert \r\n    const [showTitle, setShowTitle] = useState(); // to show the title for the video on the screen \r\n    const [fileName, setFileName] = useState(\"Downloading\") // set file name to download\r\n    const [VideoID, setVideoID] = useState('KrMIczw4Dng');\r\n    const [ShowVideo, setShowVideo] = useState(true);\r\n    //to set the foramt\r\n    const handleChange = selectedOption => {\r\n        seTselectedOption(selectedOption.target.value);\r\n    };\r\n    //Alert hide\r\n    function AlertHide() {\r\n        setShow(false)\r\n        ClearFields()\r\n    }\r\n    // clear all the fields \r\n    function ClearFields() {\r\n        console.log(\"ClearFields on process...\");\r\n        setUrlInput('')\r\n        setBtnDownload(false)\r\n        setFileName(\"Downloading\")\r\n        setShowTitle();\r\n        setShowVideo(false);\r\n        setVideoID('');\r\n    }\r\n    function clearInputData()\r\n    {\r\n        setShowVideo(false)\r\n        setBtnDownload(false)\r\n        setShowTitle();\r\n        setVideoID('');\r\n    }\r\n    return (\r\n        <div className={pointerEvents ? \"container pointerEvents\" : \"container\"}>\r\n             \r\n            <div className=\"header\">\r\n                <h1  >Youtube Converter </h1>\r\n            </div>\r\n\r\n            <main>\r\n                <div className=\"main\">\r\n                    <Loader\r\n                        type=\"Puff\"\r\n                        color=\"#00BFFF\"\r\n                        secondaryColor=\"Grey\"\r\n                        height={100}\r\n                        width={100}\r\n                        //  timeout={3000} //3 secs\r\n                        visible={LoaderT} />\r\n                    {show &&\r\n                        <div class=\"alert\">\r\n                            <span class=\"closebtn\" onClick={AlertHide}>&times;</span>\r\n                            <strong>Error!</strong> Your link invalid, Please try again\r\n                      </div>\r\n\r\n                    }\r\n                    {!show &&\r\n                        <form onSubmit={(e) => sendLinkProcessing(e)}  >\r\n\r\n                            <h1>Please insert a valid video URL</h1>\r\n                            <br></br>\r\n                            <div className=\"form_style_input\">\r\n                                <input type=\"text\" id=\"LinkURL\" name=\"urlyoutube\" value={urlInput} onChange={(e) => { setUrlInput(e.target.value); clearInputData(); }} /><br />\r\n                                <p className=\"PFontSize\">Format:</p>\r\n\r\n                                <select onChange={handleChange} name=\"cars\" id=\"cars\">\r\n                                    <option value=\"mp4\">MP4/ Video</option>\r\n                                    <option value=\"mp3\">MP3/ Audio</option>\r\n\r\n                                </select>\r\n\r\n                                <br></br>\r\n                                <h4>\r\n                                    {showTitle}\r\n                                </h4>\r\n                                   { ShowVideo &&\r\n                                    <iframe width=\"auto\" height=\"auto\" src={`https://www.youtube.com/embed/${VideoID}`} frameborder=\"0\" allowfullscreen></iframe>\r\n                                }\r\n                                <br></br>\r\n                                {\r\n                                    btnDownload\r\n                                    &&\r\n                                    <a className=\"button hideBtnDownload\" href={urlOutpot} download={`${fileName}.${selectedOption}`} onClick={ClearFields} >Click to Downloadt</a>\r\n                                }\r\n                                {\r\n                                    !btnDownload\r\n                                    &&\r\n                                    <button className=\"button\" type=\"submit\">Convert </button>\r\n                                }\r\n                            </div>\r\n                        </form>\r\n\r\n                    }\r\n\r\n                </div>\r\n            </main>\r\n\r\n            {/* <div id=\"sidebar\">Sidebar</div> */}\r\n            <div className=\"about\">\r\n                    \r\n                <h1> YouTube Converter</h1>\r\n                <p>\r\n                    By using our converter you can easily convert YouTube videos to mp3 or mp4 files and download them for free - this service works for computer and mobile devices.\r\n                    <br></br> <br></br>\r\n                    The videos are always converted in the highest available quality. Please note that we can only convert videos up to a length of 1.5 hour - the limitation is necessary, so the conversion of any video will not take more than a couple of secunds.\r\n                    <br></br> <br></br>\r\n\r\n                    To convert a video, copy the YouTube video URL into our converter, choose a format and click the convert button. As soon as the conversion is finished the file automatically downloaded.                    <br></br> <br></br>\r\n                    Enjoy! We hope you like our service.\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"appUse \">\r\n                {/* BsArrowRightShort */}\r\n                <h2>How to use our YouTube Converter</h2>\r\n                <p>\r\n                <FcNext size={32} /> Copy a video link\r\n                In order to convert your file, you’ll need to choose a video first. So go ahead and visit YouTube  and copy a link to the video that you’d like to get converted\r\n                <br></br><br></br>\r\n                <FcNext size={32} /> Paste the copied link into the input field\r\n                Paste the link for a video that you want into the ‘Please insert a valid video URL’ field\r\n                <br></br><br></br>\r\n                <FcNext size={32} /> Choose the file format you want\r\n                 <br></br><br></br>\r\n                <FcNext size={32} /> Click Convert to get mp3/ mp4 file\r\n                This is the last step! All you have to do now is to click convert and wait just a little bit for your file to get converted.\r\n                </p>\r\n            </div>\r\n\r\n            <footer>\r\n            <p><small>&copy; 2020 - Marshood Ayoub</small>  </p>\r\n            <SocialIcon url=\"https://www.linkedin.com/in/marshoodayoub/\" style={{ height: 25, width: 25 }}/>\r\n                <SocialIcon url=\"https://github.com/Marshood\"style={{ height: 25, width: 25 }}  />\r\n                <SocialIcon url=\"https://www.facebook.com/marshoodayoub\" style={{ height: 25, width: 25 }} />\r\n                <SocialIcon url=\"https://www.instagram.com/marshood1/\"style={{ height: 25, width: 25 }}  />\r\n                <SocialIcon url=\"https://www.youtube.com/user/marshood94\"style={{ height: 25, width: 25 }}  />\r\n            </footer>\r\n        </div >\r\n\r\n    )\r\n\r\n    function sendLinkProcessing(e) {\r\n        e.preventDefault();\r\n        setLoader(true);\r\n        setpointerEvents(true);\r\n        const YTURL = e.target.urlyoutube.value;\r\n        checkURL(YTURL);\r\n        console.log(\"YTURL 20: \", YTURL);\r\n        // UrlConvert(YTURL);\r\n\r\n        // getVideo(YTURL)\r\n        // download(YTURL)\r\n    }\r\n\r\n    function checkURL(url) {\r\n        console.log(\"url \", url)\r\n        fetch('/api/youtube/checkURL', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    url: url,\r\n                })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data.title)\r\n                if (data.title != null) {\r\n                    console.log(\"title succes\")\r\n                    UrlConvert(url);\r\n                    setFileName(data.title);\r\n                    setShowTitle(data.title);\r\n                    setVideoID(data.id)\r\n                    setShowVideo(true);\r\n                }\r\n                else {\r\n                    console.log(\"title error\")\r\n                    console.log(\"error to convert the video try again!!\")\r\n                    setShow(true)\r\n                    setLoader(false);\r\n                    setpointerEvents(false);\r\n                    setShowVideo(false);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n    function getVideoName(YTURL) {\r\n        console.log(\"getVideo title....\")\r\n        fetch('/api/youtube/getvideoname', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    YTURL: YTURL,\r\n                })\r\n        }).then(response => response.json())\r\n            .then((jsonData) => {\r\n                setFileName(jsonData.name)\r\n                setShowTitle(jsonData.name)\r\n                console.log(\"name \", fileName, \"  jsonData\", jsonData.name)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n    async function UrlConvert(YTURL) {\r\n        console.log(\"starting video convert....\")\r\n        // getVideoName(YTURL)\r\n        fetch('/api/youtube/convertUrl', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    YTURL: YTURL,\r\n                    selectedOption: selectedOption\r\n                })\r\n        }).then(function (response) {\r\n            console.log(\"statuss\", response.status); // returns 200\r\n            response.blob().then(data => {\r\n                console.log(\"blob size:data   \", data)\r\n                if (data.size > 1000) {\r\n                    console.log(\"data 37:\", data, Date())\r\n                    let url = window.webkitURL.createObjectURL(data);\r\n                    console.log(\"url\", url)\r\n                    let a = document.createElement('a');\r\n                    a.href = url;\r\n                    // setUrlInput(url)\r\n                    setUrlOutpot(url)\r\n                    setLoader(false);\r\n                    setpointerEvents(false);\r\n                    setBtnDownload(true)\r\n                    a.download = `mployees.${selectedOption}`;\r\n                    //a.click();\r\n                    console.log(\"colling func\");\r\n                    // getVideoName(YTURL)\r\n                }\r\n                else {\r\n                    console.log(\"error to convert the video try again!!\")\r\n                    setShow(true)\r\n                    setLoader(false);\r\n                    setpointerEvents(false);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    async function getVideo(URL) {\r\n        console.log('getvideo URL', URL);\r\n\r\n        const response = await fetch('/api/youtube/video', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    url: URL\r\n                })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setUrlInput(data.meta.formats[0].url)\r\n                console.log(\"testdata: \", data.meta.formats[0].url)\r\n                setpointerEvents(false);\r\n                console.log(\"urll\", data.meta.formats[0].url);\r\n                download(data.meta.formats[0].url)\r\n            })\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { React, useState } from 'react';\r\nimport download from 'downloadjs';\r\nimport Loader from 'react-loader-spinner';\r\nimport { FcNext } from \"react-icons/fc\";\r\nimport Nav from '../../../components/nav/Nav';\r\nimport './instgram.css'\r\nimport { SocialIcon } from 'react-social-icons';\r\n\r\nexport default function InstgramConvertPage() {\r\n    const [LoaderT, setLoader] = useState(false); // to show the loader icon\r\n    const [urlInput, setUrlInput] = useState(''); // to save the url input\r\n    const [urlOutpot, setUrlOutpot] = useState(''); // save blobr\r\n    const [pointerEvents, setpointerEvents] = useState(false)// to stop pointer events while video processing\r\n    const [selectedOption, seTselectedOption] = useState('mp4');//save file format \r\n    const [btnDownload, setBtnDownload] = useState(false); // to show download button \r\n    const [show, setShow] = useState(false); //to show alert \r\n    const [showTitle, setShowTitle] = useState(); // to show the title for the video on the screen \r\n    const [fileName, setFileName] = useState(\"Downloading\") // set file name to download\r\n    const [VideoID, setVideoID] = useState('KrMIczw4Dng');\r\n    const [ShowVideo, setShowVideo] = useState(true);\r\n    //to set the foramt\r\n    const handleChange = selectedOption => {\r\n        seTselectedOption(selectedOption.target.value);\r\n    };\r\n    //Alert hide\r\n    function AlertHide() {\r\n        setShow(false)\r\n        ClearFields()\r\n    }\r\n    // clear all the fields \r\n    function ClearFields() {\r\n        console.log(\"ClearFields on process...\");\r\n        setUrlInput('')\r\n        setBtnDownload(false)\r\n        setFileName(\"Downloading\")\r\n        setShowTitle();\r\n        setShowVideo(false);\r\n        setVideoID('');\r\n    }\r\n    function clearInputData()\r\n    {\r\n        setShowVideo(false)\r\n        setBtnDownload(false)\r\n        setShowTitle();\r\n        setVideoID('');\r\n    }\r\n    return (\r\n        <div className={pointerEvents ? \"container pointerEvents\" : \"container\"}>\r\n\r\n            <div className=\"header\">\r\n                <h1 >Instgram Converter </h1>\r\n            </div>\r\n\r\n            <main>\r\n                <div className=\"main\">\r\n                    <Loader\r\n                        type=\"Puff\"\r\n                        color=\"#00BFFF\"\r\n                        secondaryColor=\"Grey\"\r\n                        height={100}\r\n                        width={100}\r\n                        //  timeout={3000} //3 secs\r\n                        visible={LoaderT} />\r\n                    {show &&\r\n                        <div class=\"alert\">\r\n                            <span class=\"closebtn\" onClick={AlertHide}>&times;</span>\r\n                            <strong>Error!</strong> Your link invalid, Please try again\r\n                      </div>\r\n\r\n                    }\r\n                    {!show &&\r\n                        <form onSubmit={(e) => sendLinkProcessing(e)}  >\r\n\r\n                            <h1>Please insert a valid video URL</h1>\r\n                                                        <br></br>\r\n                            <div className=\"form_style_input\">\r\n                                <input type=\"text\" id=\"LinkURL\" name=\"urlyoutube\" value={urlInput} onChange={(e) => { setUrlInput(e.target.value);clearInputData(); }} /><br />\r\n                                <p className=\"PFontSize\">Format:</p>\r\n\r\n                                <select onChange={handleChange} name=\"cars\" id=\"cars\">\r\n                                    <option value=\"mp4\">MP4/ Video</option>\r\n                                    <option value=\"mp3\">MP3/ Audio</option>\r\n\r\n                                </select>\r\n\r\n                                <br></br>\r\n                                <h4>\r\n                                    {showTitle}\r\n                                </h4>\r\n                                {ShowVideo &&\r\n                                    <iframe width=\"auto\" height=\"auto\" src={`https://www.youtube.com/embed/${VideoID}`} frameborder=\"0\" allowfullscreen></iframe>\r\n                                }\r\n                                <br></br>\r\n                                {\r\n                                    btnDownload\r\n                                    &&\r\n                                    <a className=\"button hideBtnDownload\" href={urlOutpot} download={`${fileName}.${selectedOption}`} onClick={ClearFields} >Click to Downloadt</a>\r\n                                }\r\n                                {\r\n                                    !btnDownload\r\n                                    &&\r\n                                    <button className=\"button\" type=\"submit\">Convert </button>\r\n                                }\r\n                            </div>\r\n                        </form>\r\n\r\n                    }\r\n\r\n                </div>\r\n            </main>\r\n\r\n            {/* <div id=\"sidebar\">Sidebar</div> */}\r\n            <div className=\"about\">\r\n                <p><h2> Instgram Converter</h2></p>\r\n                <p>\r\n                    By using our converter you can easily convert Instgram videos to mp3 or mp4 files and download them for free - this service works for computer and mobile devices.\r\n                    <br></br> <br></br>\r\n                    The videos are always converted in the highest available quality. Please note that we can only convert videos up to a length of 1.5 hour - the limitation is necessary, so the conversion of any video will not take more than a couple of secunds.\r\n                    <br></br> <br></br>\r\n\r\n                    To convert a video, copy the YouTube video URL into our converter, choose a format and click the convert button. As soon as the conversion is finished the file automatically downloaded.                    <br></br> <br></br>\r\n                    Enjoy! We hope you like our service.\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"appUse\">\r\n\r\n                {/* BsArrowRightShort */}\r\n                <p>\r\n                    <h2>How to use our YouTube Converter</h2>\r\n\r\n                    <FcNext size={32} /> Copy a video link\r\n                In order to convert your file, you’ll need to choose a video first. So go ahead and visit YouTube  and copy a link to the video that you’d like to get converted\r\n                <br></br><br></br>\r\n                    <FcNext size={32} /> Paste the copied link into the input field\r\n                Paste the link for a video that you want into the ‘Please insert a valid video URL’ field\r\n                <br></br><br></br>\r\n                    <FcNext size={32} /> Choose the file format you want\r\n                 <br></br><br></br>\r\n                    <FcNext size={32} /> Click Convert to get mp3/ mp4 file\r\n                This is the last step! All you have to do now is to click convert and wait just a little bit for your file to get converted.\r\n                </p>\r\n            </div>\r\n\r\n            <footer>\r\n                <p> <small>&copy; 2020 - Marshood Ayoub</small></p>\r\n                <SocialIcon url=\"https://www.linkedin.com/in/marshoodayoub/\" style={{ height: 25, width: 25 }}/>\r\n                <SocialIcon url=\"https://github.com/Marshood\"style={{ height: 25, width: 25 }}  />\r\n                <SocialIcon url=\"https://www.facebook.com/marshoodayoub\" style={{ height: 25, width: 25 }} />\r\n                <SocialIcon url=\"https://www.instagram.com/marshood1/\"style={{ height: 25, width: 25 }}  />\r\n                <SocialIcon url=\"https://www.youtube.com/user/marshood94\"style={{ height: 25, width: 25 }}  />\r\n            </footer>\r\n        </div >\r\n\r\n    )\r\n\r\n    function sendLinkProcessing(e) {\r\n        e.preventDefault();\r\n        setLoader(true);\r\n        setpointerEvents(true);\r\n        const YTURL = e.target.urlyoutube.value;\r\n        checkURL(YTURL);\r\n        console.log(\"YTURL 20: \", YTURL);\r\n        // UrlConvert(YTURL);\r\n\r\n        // getVideo(YTURL)\r\n        // download(YTURL)\r\n    }\r\n\r\n    function checkURL(url) {\r\n        console.log(\"url \", url)\r\n        fetch('/api/youtube/checkURL', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    url: url,\r\n                })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data.title)\r\n                if (data.title != null) {\r\n                    console.log(\"title succes\")\r\n                    UrlConvert(url);\r\n                    setFileName(data.title);\r\n                    setShowTitle(data.title);\r\n                    setVideoID(data.id)\r\n                    setShowVideo(true);\r\n                }\r\n                else {\r\n                    console.log(\"title error\")\r\n                    console.log(\"error to convert the video try again!!\")\r\n                    setShow(true)\r\n                    setLoader(false);\r\n                    setpointerEvents(false);\r\n                    setShowVideo(false);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n    function getVideoName(YTURL) {\r\n        console.log(\"getVideo title....\")\r\n        fetch('/api/youtube/getvideoname', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    YTURL: YTURL,\r\n                })\r\n        }).then(response => response.json())\r\n            .then((jsonData) => {\r\n                setFileName(jsonData.name)\r\n                setShowTitle(jsonData.name)\r\n                console.log(\"name \", fileName, \"  jsonData\", jsonData.name)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n    async function UrlConvert(YTURL) {\r\n        console.log(\"starting video convert....\")\r\n        // getVideoName(YTURL)\r\n        fetch('/api/youtube/convertUrl', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    YTURL: YTURL,\r\n                    selectedOption: selectedOption\r\n                })\r\n        }).then(function (response) {\r\n            console.log(\"statuss\", response.status); // returns 200\r\n            response.blob().then(data => {\r\n                console.log(\"blob size:data   \", data)\r\n                if (data.size > 1000) {\r\n                    console.log(\"data 37:\", data, Date())\r\n                    let url = window.webkitURL.createObjectURL(data);\r\n                    console.log(\"url\", url)\r\n                    let a = document.createElement('a');\r\n                    a.href = url;\r\n                    // setUrlInput(url)\r\n                    setUrlOutpot(url)\r\n                    setLoader(false);\r\n                    setpointerEvents(false);\r\n                    setBtnDownload(true)\r\n                    a.download = `mployees.${selectedOption}`;\r\n                    //a.click();\r\n                    console.log(\"colling func\");\r\n                    // getVideoName(YTURL)\r\n                }\r\n                else {\r\n                    console.log(\"error to convert the video try again!!\")\r\n                    setShow(true)\r\n                    setLoader(false);\r\n                    setpointerEvents(false);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    async function getVideo(URL) {\r\n        console.log('getvideo URL', URL);\r\n\r\n        const response = await fetch('/api/youtube/video', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    url: URL\r\n                })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setUrlInput(data.meta.formats[0].url)\r\n                console.log(\"testdata: \", data.meta.formats[0].url)\r\n                setpointerEvents(false);\r\n                console.log(\"urll\", data.meta.formats[0].url);\r\n                download(data.meta.formats[0].url)\r\n            })\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { React, useState } from 'react';\r\nimport download from 'downloadjs';\r\nimport Loader from 'react-loader-spinner';\r\nimport './home.css'\r\nimport { FcNext ,FcAdvance} from \"react-icons/fc\";\r\nimport { AiFillFacebook,AiFillInstagram,AiOutlineLinkedin } from \"react-icons/ai\";\r\n  import { SocialIcon } from 'react-social-icons';\r\n\r\nexport default function Home() {\r\n \r\n    return (\r\n        <div className={\"container\"}>\r\n\r\n            <div className=\"header\">\r\n                <h1  >VConventer   </h1>\r\n           \r\n\r\n                \r\n            </div>\r\n\r\n\r\n            {/* <div id=\"sidebar\">Sidebar</div> */}\r\n            <div className=\"about\">\r\n                <h1> Vconventer is online video converter</h1>\r\n                <p>\r\n                    VConventer is an online tool to download,\r\n                    My online video converter is very simple and easy to use.\r\n                    It's allows you to convert and download video from YouTube, Facebook and Instgram\r\n                    for free - this service works for computer and mobile devices.\r\n                 </p>\r\n                <p>\r\n                    The videos are always converted in the highest available quality.\r\n                    Please note that we can only convert videos up to a length of 1.5 hour -\r\n                    the limitation is necessary, so the conversion of any video will not take more than\r\n                    a couple of secunds.\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"appUse\">\r\n                {/* BsArrowRightShort */}\r\n                <h2>How to use our YouTube Converter</h2>\r\n\r\n                <p>Instagram video downloader work in 3 easy steps:</p>\r\n\r\n\r\n\r\n\r\n\r\n                <FcAdvance size={32} />\r\n                 Copy a Video link  you want to convert.. Then go to ytconvert.herokuapp.com\r\n\r\n                <br></br><br></br>\r\n                <FcAdvance size={32} />\r\n                Visting ytconvert.herokuapp.com and to the current page and paste link. Choose the format and then Click Convert  button to start converting process. It can takes a few seconds to minutes.\r\n                   <br></br><br></br>\r\n                 <FcAdvance size={32} /> Click Download button to get mp3/ mp4 file\r\n                This is the last step! All you have to do now is to click convert and wait just a little bit for your file to get converted.\r\n            </div>\r\n\r\n            <footer>\r\n                <p><small>&copy; 2020 - Marshood Ayoub </small> \r\n                <SocialIcon url=\"https://www.linkedin.com/in/marshoodayoub/\" style={{ height: 25, width: 25 }}/>\r\n                <SocialIcon url=\"https://github.com/Marshood\"style={{ height: 25, width: 25 }}  />\r\n                <SocialIcon url=\"https://www.facebook.com/marshoodayoub\" style={{ height: 25, width: 25 }} />\r\n                <SocialIcon url=\"https://www.instagram.com/marshood1/\"style={{ height: 25, width: 25 }}  />\r\n                <SocialIcon url=\"https://www.youtube.com/user/marshood94\"style={{ height: 25, width: 25 }}  />\r\n\r\n                    </p>\r\n            </footer>\r\n        </div >\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n}","import { React, useState } from 'react';\r\nimport download from 'downloadjs';\r\nimport Loader from 'react-loader-spinner';\r\nimport './facebook.css'\r\nimport { FcNext } from \"react-icons/fc\";\r\nimport { SocialIcon } from 'react-social-icons';\r\nexport default function YoutubeConvertPage() {\r\n    const [LoaderT, setLoader] = useState(false); // to show the loader icon\r\n    const [urlInput, setUrlInput] = useState(''); // to save the url input\r\n    const [urlOutpot, setUrlOutpot] = useState(''); // save blobr\r\n    const [pointerEvents, setpointerEvents] = useState(false)// to stop pointer events while video processing\r\n    const [selectedOption, seTselectedOption] = useState('mp4');//save file format \r\n    const [btnDownload, setBtnDownload] = useState(false); // to show download button \r\n    const [show, setShow] = useState(false); //to show alert \r\n    const [showTitle, setShowTitle] = useState(); // to show the title for the video on the screen \r\n    const [fileName, setFileName] = useState(\"Downloading\") // set file name to download\r\n    const [VideoID, setVideoID] = useState('KrMIczw4Dng');\r\n    const [ShowVideo, setShowVideo] = useState(true);\r\n    const [FBV, setFBV] = useState('https://www.youtube.com/embed/KrMIczw4Dng')\r\n    //to set the foramt\r\n    const handleChange = selectedOption => {\r\n        seTselectedOption(selectedOption.target.value);\r\n    };\r\n    //Alert hide\r\n    function AlertHide() {\r\n        setShow(false)\r\n        ClearFields()\r\n    }\r\n    // clear all the fields \r\n    function ClearFields() {\r\n        console.log(\"ClearFields on process...\");\r\n        setUrlInput('')\r\n        setBtnDownload(false)\r\n        setFileName(\"Downloading\")\r\n        setShowTitle();\r\n        setShowVideo(false);\r\n        setVideoID('');\r\n    }\r\n    function clearInputData()\r\n    {\r\n        setShowVideo(false)\r\n        setBtnDownload(false)\r\n        setShowTitle();\r\n        setVideoID('');\r\n    }\r\n    return (\r\n        <div className={pointerEvents ? \"container pointerEvents\" : \"container\"}>\r\n\r\n            <div className=\"header\">\r\n                <h1  >Facebook Converter </h1>\r\n            </div>\r\n\r\n            <main>\r\n                <div className=\"main\">\r\n                    <Loader\r\n                        type=\"Puff\"\r\n                        color=\"#00BFFF\"\r\n                        secondaryColor=\"Grey\"\r\n                        height={100}\r\n                        width={100}\r\n                        //  timeout={3000} //3 secs\r\n                        visible={LoaderT} />\r\n                    {show &&\r\n                        <div class=\"alert\">\r\n                            <span class=\"closebtn\" onClick={AlertHide}>&times;</span>\r\n                            <strong>Error!</strong> Your link invalid, Please try again\r\n                      </div>\r\n\r\n                    }\r\n                    {!show &&\r\n                        <form onSubmit={(e) => sendLinkProcessing(e)}  >\r\n\r\n                            <h1>Please insert a valid video URL</h1>\r\n                            <br></br>\r\n                            <div className=\"form_style_input\">\r\n                                <input type=\"text\" id=\"LinkURL\" name=\"urlyoutube\" value={urlInput} onChange={(e) => { setUrlInput(e.target.value); clearInputData(); }} /><br />\r\n                                <p className=\"PFontSize\">Format:</p>\r\n\r\n                                <select onChange={handleChange} name=\"cars\" id=\"cars\">\r\n                                    <option value=\"mp4\">MP4/ Video</option>\r\n                                    <option value=\"mp3\">MP3/ Audio</option>\r\n\r\n                                </select>\r\n\r\n                                <br></br>\r\n                                <h4>\r\n                                    {showTitle}\r\n                                </h4>\r\n                                {ShowVideo &&\r\n                                    <iframe width=\"auto\" height=\"auto\" src={`${FBV}`} frameborder=\"0\" allowfullscreen>\r\n                                    </iframe>\r\n                                }\r\n                                <br></br>\r\n                                {\r\n                                    btnDownload\r\n                                    &&\r\n                                    <a className=\"button hideBtnDownload\" href={urlOutpot} download={`${fileName}.${selectedOption}`} onClick={ClearFields} >Click to Downloadt</a>\r\n                                }\r\n                                {\r\n                                    !btnDownload\r\n                                    &&\r\n                                    <button className=\"button\" type=\"submit\">Convert </button>\r\n                                }\r\n\r\n                            </div>\r\n                        </form>\r\n\r\n                    }\r\n\r\n                </div>\r\n            </main>\r\n\r\n            {/* <div id=\"sidebar\">Sidebar</div> */}\r\n            <div className=\"about\">\r\n            <p><h2> Facebook Converter</h2></p>\r\n                <p>\r\n                    By using our converter you can easily convert Facebook videos to mp3 or mp4 files and download them for free - this service works for computer and mobile devices.\r\n                    <br></br> <br></br>\r\n                    The videos are always converted in the highest available quality. Please note that we can only convert videos up to a length of 1.5 hour - the limitation is necessary, so the conversion of any video will not take more than a couple of secunds.\r\n                    <br></br> <br></br>\r\n\r\n                    To convert a video, copy the YouTube video URL into our converter, choose a format and click the convert button. As soon as the conversion is finished the file automatically downloaded.                    <br></br> <br></br>\r\n                    Enjoy! We hope you like our service.\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"appUse\">\r\n                {/* BsArrowRightShort */}\r\n                <h1>How to use our YouTube Converter</h1>\r\n\r\n                <p> <FcNext size={32} /> Copy a video link\r\n                In order to convert your file, you’ll need to choose a video first. So go ahead and visit YouTube  and copy a link to the video that you’d like to get converted\r\n                </p>\r\n                <p>    <FcNext size={32} /> Paste the copied link into the input field\r\n                Paste the link for a video that you want into the ‘Please insert a valid video URL’ field\r\n                </p>\r\n                <p>\r\n\r\n                    <FcNext size={32} /> Choose the file format you want\r\n                        </p>\r\n                <p>  <FcNext size={32} /> Click Convert to get mp3/ mp4 file\r\n                This is the last step! All you have to do now is to click convert and wait just a little bit for your file to get converted.\r\n                </p>\r\n            </div>\r\n\r\n            <footer>\r\n                <p><small>&copy; 2020 - Marshood Ayoub</small></p>\r\n                <SocialIcon url=\"https://www.linkedin.com/in/marshoodayoub/\" style={{ height: 25, width: 25 }}/>\r\n                <SocialIcon url=\"https://github.com/Marshood\"style={{ height: 25, width: 25 }}  />\r\n                <SocialIcon url=\"https://www.facebook.com/marshoodayoub\" style={{ height: 25, width: 25 }} />\r\n                <SocialIcon url=\"https://www.instagram.com/marshood1/\"style={{ height: 25, width: 25 }}  />\r\n                <SocialIcon url=\"https://www.youtube.com/user/marshood94\"style={{ height: 25, width: 25 }}  />\r\n            </footer>\r\n        </div >\r\n\r\n    )\r\n\r\n    function sendLinkProcessing(e) {\r\n        e.preventDefault();\r\n        setLoader(true);\r\n        setpointerEvents(true);\r\n        const YTURL = e.target.urlyoutube.value;\r\n        checkURL(YTURL);\r\n        console.log(\"YTURL 20: \", YTURL);\r\n        // UrlConvert(YTURL);\r\n\r\n        // getVideo(YTURL)\r\n        // download(YTURL)\r\n    }\r\n\r\n    function checkURL(url) {\r\n        console.log(\"url \", url)\r\n        fetch('/api/facebook/getdetailsFB', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    url: url,\r\n                })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data.title)\r\n                if (data.DL) {\r\n                    console.log(\"succes\")\r\n                    UrlConvert(url);\r\n                    setFileName(data.DL.title);\r\n                    setShowTitle(data.DL.title);\r\n                    setVideoID(data.id)\r\n                    setFBV(data.VDATA)\r\n                    setShowVideo(true);\r\n                }\r\n                else {\r\n                    console.log(\"title error\")\r\n                    console.log(\"error to convert the video try again!!\")\r\n                    setShow(true)\r\n                    setLoader(false);\r\n                    setpointerEvents(false);\r\n                    setShowVideo(false);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n    async function UrlConvert(YTURL) {\r\n        console.log(\"starting video convert....\")\r\n        // getVideoName(YTURL)\r\n        fetch('/api/facebook/convertUrl', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    YTURL: YTURL,\r\n                    selectedOption: selectedOption\r\n                })\r\n        }).then(function (response) {\r\n            console.log(\"statuss\", response.status); // returns 200\r\n            response.blob().then(data => {\r\n                console.log(\"blob size:data   \", data)\r\n                if (data.size > 1000) {\r\n                    console.log(\"data 37:\", data, Date())\r\n                    let url = window.webkitURL.createObjectURL(data);\r\n                    console.log(\"url\", url)\r\n                    let a = document.createElement('a');\r\n                    a.href = url;\r\n                    // setUrlInput(url)\r\n                    setUrlOutpot(url)\r\n                    setLoader(false);\r\n                    setpointerEvents(false);\r\n                    setBtnDownload(true)\r\n                    a.download = `mployees.${selectedOption}`;\r\n                    //a.click();\r\n                    console.log(\"colling func\");\r\n                    // getVideoName(YTURL)\r\n                }\r\n                else {\r\n                    console.log(\"error to convert the video try again!!\")\r\n                    setShow(true)\r\n                    setLoader(false);\r\n                    setpointerEvents(false);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import './App.css';\n\nimport Nav from './components/nav/Nav';\nimport YoutubeConvertPage from './view/pages/youtube/youtube';\nimport InstgramConvertPage from './view/pages/instgram/instgram';\nimport Home from './view/pages/home/home'\nimport FacebookConvertPage from './view/pages/facebook/facebook'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link,\n  useLocation,\n  useParams,\n  HashRouter\n} from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n function App() {\n  const history = createBrowserHistory();\n\n  return (\n    // <div>\n    //   <Nav />\n    //   <Home />\n    // </div>\n     <HashRouter>\n    <HashRouter>\n      <div className=\"app\">\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@200;300;400;500;531;600;700;800&display=swap\"\n          rel=\"stylesheet\"\n        ></link>\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\"\n          rel=\"stylesheet\"\n        ></link>\n        <Nav />\n        <div className=\"mainPage\">\n          <Switch>\n            <Route exact={true} path=\"/\">\n              <Home />\n            </Route>\n            <Route exact={true} path=\"/home\">\n              <Home />\n            </Route>\n            <Route path=\"/InstgramConvertPage\">\n              <InstgramConvertPage />\n            </Route>\n            <Route path=\"/FacebookConvertPage\">\n              <FacebookConvertPage />\n            </Route>\n            <Route path=\"/YoutubeConvertPage\">\n              <YoutubeConvertPage />\n            </Route>\n          \n          \n          </Switch>\n        </div>\n      </div>\n    </HashRouter>\n\n     </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}